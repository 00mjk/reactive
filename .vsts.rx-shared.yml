parameters: 
  signStep: []
    
steps:
- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- script: nbgv cloud -p Rx.NET\Source
  displayName: Set Version
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))
  
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.1.400-preview-009171'

- task: MSBuild@1
  displayName: Build System.Reactive.sln
  inputs:
    solution: Rx.NET/Source/System.Reactive.sln    
    msbuildArguments: /restore /t:build /p:CreatePackage=true /p:NoPackageAnalysis=true /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)\artifacts
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
    maximumCpuCount: true

- task: NuGetCommand@2
  displayName: Pack compatibility package
  inputs:
    command: custom
    arguments: pack Rx.NET/Source/facades/System.Reactive.Compatibility.nuspec -Version $(NBGV_NuGetPackageVersion) -MinClientVersion 2.12 -NoPackageAnalysis -outputdirectory $(Build.ArtifactStagingDirectory)\artifacts
  condition: eq(variables['system.pullrequest.isfork'], false)

- task: MSBuild@1
  displayName: Build for Test (ppdb) workaround
  inputs:
    solution: Rx.NET/Source/System.Reactive.sln    
    msbuildArguments: /t:build /p:DebugType=portable
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
    maximumCpuCount: true

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: Rx.NET/Source/tests/Tests.System.Reactive/*.csproj
    arguments: -c $(BuildConfiguration) --no-build --no-restore --filter "SkipCI!=true" --collect:"Code Coverage" -s $(System.DefaultWorkingDirectory)/Rx.NET/Source/CodeCoverage.runsettings
  displayName: Run Unit Tests

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: Rx.NET/Source/tests/Tests.System.Reactive.ApiApprovals/Tests.System.Reactive.ApiApprovals.csproj
    arguments: -c $(BuildConfiguration) --no-build --no-restore 
  displayName: Run Api Approvals Tests
  
- ${{ parameters.signStep }}

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)\artifacts
    ArtifactName: artifacts
    publishLocation: Container
  condition: eq(variables['system.pullrequest.isfork'], false)